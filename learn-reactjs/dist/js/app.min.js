"use strict";var APP=APP||{};APP.launcher=function(){function e(){APP.render.product()}return{init:e}}(),APP.render=function(){function e(){var e=[{category:"Sporting Goods",price:"$49.99",stocked:!0,name:"Football"},{category:"Sporting Goods",price:"$9.99",stocked:!0,name:"Baseball"},{category:"Sporting Goods",price:"$29.99",stocked:!1,name:"Basketball"},{category:"Electronics",price:"$99.99",stocked:!0,name:"iPod Touch"},{category:"Electronics",price:"$399.99",stocked:!1,name:"iPhone 5"},{category:"Electronics",price:"$199.99",stocked:!0,name:"Nexus 7"}],t=React.createClass({displayName:"ProductCategoryRow",render:function(){return React.createElement("tr",null,React.createElement("th",{colSpan:"2"},this.props.category))}}),n=React.createClass({displayName:"ProductRow",render:function(){var e=this.props.product.stocked?this.props.product.name:React.createElement("span",{style:{color:"red"}},this.props.product.name);return React.createElement("tr",null,React.createElement("td",null,e),React.createElement("td",null,this.props.product.price))}}),r=React.createClass({displayName:"ProductTable",render:function(){var e=[],r=null;return this.props.products.forEach(function(c){c.name.indexOf(this.props.filterText)===-1||!c.stocked&&this.props.inStockOnly||(c.category!==r&&e.push(React.createElement(t,{category:c.category,key:c.category})),e.push(React.createElement(n,{product:c,key:c.name})),r=c.category)}.bind(this)),React.createElement("table",null,React.createElement("thead",null,React.createElement("tr",null,React.createElement("th",null,"Name"),React.createElement("th",null,"Price"))),React.createElement("tbody",null,e))}}),c=React.createClass({displayName:"SearchBar",handleChange:function(){this.props.onUserInput(this.refs.filterTextInput.value,this.refs.inStockOnlyInput.checked)},render:function(){return React.createElement("form",null,React.createElement("input",{type:"text",placeholder:"Search...",value:this.props.filterText,ref:"filterTextInput",onChange:this.handleChange}),React.createElement("p",null,React.createElement("input",{type:"checkbox",checked:this.props.inStockOnly,ref:"inStockOnlyInput",onChange:this.handleChange})," ","Only show products in stock"))}}),a=React.createClass({displayName:"FilterableProductTable",getInitialState:function(){return{filterText:"",inStockOnly:!1}},handleUserInput:function(e,t){this.setState({filterText:e,inStockOnly:t})},render:function(){return React.createElement("div",null,React.createElement(c,{filterText:this.state.filterText,inStockOnly:this.state.inStockOnly,onUserInput:this.handleUserInput}),React.createElement(r,{products:this.props.products,filterText:this.state.filterText,inStockOnly:this.state.inStockOnly}))}});ReactDOM.render(React.createElement(a,{products:e}),document.getElementById("container"))}return{product:e}}(),APP.launcher.init();
//# sourceMappingURL=data:application/json;base64,
